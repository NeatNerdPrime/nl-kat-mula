@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

skinparam linetype ortho

AddElementTag("micro_service", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")

Title [WIP] C2 Container diagram for Scheduler System

System_Boundary(c1, "Scheduler") {
  Container(scheduler, "Scheduler", "TBD", "Scheduler service")
  ContainerDb(scheduler_db, "Scheduler Database", "PostgreSQL", "Persistence layer for internal state for the scheduler service", $tags = "storage")
}

ContainerQueue(message_bus, "Message Bus", "RabbitMQ", "event stream")
Container(boefjes, "Boefjes", "micro service", "", $tags = "micro_service")
Container(normalizers, "Normalizers", "micro service", "", $tags = "micro_service")

System_Ext(bytes, "Bytes", "Software System")
System_Ext(octopoes, "Octopoes", "Graph Database")
System_Ext(rocky, "Rocky", "Webapp", "Webapp")
' System_Ext(katalogus, "Katalogus", "Software System")

Rel_Up(scheduler, message_bus, "Subscribes to events")
Rel(scheduler, scheduler_db, "Stores data in")

Rel(scheduler, normalizers, "Pop job from queue")
Rel(scheduler, boefjes, "Pop job from queue")

Rel(boefjes, bytes, "Post results")
Rel(bytes, normalizers, "Get results")

Rel(octopoes, message_bus, "Publish events")
Rel(rocky, octopoes, "Create object")

' Rel(octopoes, scheduler, "Reference for calculation")
' Rel(bytes, scheduler, "Reference for calculation")
' Rel(katalogus, scheduler, "Reference for calculation")
' Rel(rocky, scheduler, "Reference for calculation")

SHOW_LEGEND()

@enduml
